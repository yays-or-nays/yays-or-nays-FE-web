{"version":3,"sources":["Categories/Categories.js","Results/Result.js","logo.png","HotTake/HotTake.js","App.js","index.js"],"names":["myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","query","variables","redirect","Categories","getHotTake","useState","categories","setCategories","useEffect","fetch","then","response","json","result","data","tags","catch","error","console","log","categoryButtons","map","category","className","id","onClick","length","Result","hotTake","toggleResult","yesVote","noVote","tag","HotTake","resultDisplay","setResultDisplay","str","axios","post","mutation","operation","fields","status","src","logo","question","picture","alt","App","setHotTake","hotTakeByCategory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.976a900f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport './Categories.css';\nimport axios from 'axios';\nimport {query} from 'gql-query-builder';\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar graphql = JSON.stringify({\n  query: \"query{\\n  tags{\\n      id\\n      category\\n  }\\n}\\n\",\n  variables: {}\n})\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: graphql,\n  redirect: 'follow'\n};\n\nexport default function Categories({getHotTake}) {\n  const [categories, setCategories] = useState([])\n\n  useEffect(() => {\n    fetch(\"https://yays-or-nays-be.herokuapp.com/graphql\", requestOptions)\n      .then(response => response.json())\n      .then(result => setCategories(result.data.tags))\n      .catch(error => console.log('error', error));\n  }, [])\n\n  const categoryButtons = categories ? categories.map(category => {\n    return (\n      <section\n        className='category-button'\n        id={category.id}\n key={category.id}\n        onClick={() => getHotTake(category.id)}>\n        <p>\n          {categories.length ? category.category : 'Loading'}\n        </p>\n      </section>\n    );\n  }) : <p>Loading...</p>;\n\n  return (\n    <nav>\n      <h1>Categories</h1>\n      {categoryButtons}\n    </nav>\n  )\n}","import React, {useState, useEffect} from 'react';\nimport './Result.css';\n\nconst Result = ({hotTake, toggleResult, getHotTake}) => {\n\n  const onClick = () => {\n    getHotTake(hotTake.tag.id);\n    toggleResult();\n  }\n\n  return(\n    <section className='results'>\n      <h3 className='results-title'>And the people say...</h3>\n      <p className='votes'>Yes Votes: {hotTake.yesVote}</p>\n      <p className='votes'>No Votes: {hotTake.noVote}</p>\n      <button className='next-hottake' onClick={onClick}>Next HotTake</button>\n    </section>\n  )\n}\n\nexport default Result;\n","export default __webpack_public_path__ + \"static/media/logo.ca58a66f.png\";","import React, {useState, useEffect} from 'react';\nimport './HotTake.css';\nimport Result from '../Results/Result';\nimport axios from 'axios';\nimport {mutation} from 'gql-query-builder';\nimport logo from '../logo.png';\n\nexport default function HotTake({hotTake, getHotTake}) {\n  const [resultDisplay, setResultDisplay] = useState(false);\n\n\n  const onClick = (str) => {\n    toggleResult();\n    if(str === 'Yay') {\n      return axios\n    .post(\n      'https://yays-or-nays-be.herokuapp.com/graphql',\n      mutation({\n        operation: `incrementYesVote(input: {id: ${hotTake.id}})`,\n        fields: ['clientMutationId'],\n      }),\n    )\n    .then(response => {\n      console.log(response.data);\n      if (response.status < 400) {\n      } else {\n        console.log('fail');\n      }\n    });\n  }\n  else if(str === 'Nay') {\n    return axios\n    .post(\n      'https://yays-or-nays-be.herokuapp.com/graphql',\n      mutation({\n        operation: `incrementNoVote(input: {id: ${hotTake.id}}) {\n          clientMutationId\n        }`,\n      }),\n    )\n    .then(response => {\n      console.log(response.data);\n      if (response.status < 400) {\n        return response.data;\n      } else {\n        return response.status;\n      }\n    });\n  }\n  }\n\n  const toggleResult = () => {\n    setResultDisplay(!resultDisplay);\n  }\n\n  const display = () => {\n    if (!resultDisplay && hotTake) {\n      return (\n        <main className='hot-take'>\n          <img className='logo' src={logo} />\n          <p className='question'>{hotTake.question}</p>\n          <img className=\"hot-take-img\" src={hotTake.picture} alt='hot take' />\n          <section className=\"buttons\">\n            <button className='button' onClick={() => {\n              hotTake.yesVote++\n              onClick('Yay');\n            }}>Yay</button>\n            <button className='button' onClick={() => {\n              hotTake.noVote++\n              onClick('Nay');\n            }}>Nay</button>\n          </section>\n        </main>\n      )}\n      else if (resultDisplay) {\n        return (\n          < Result hotTake={hotTake} toggleResult={toggleResult} getHotTake={getHotTake}/>\n        )\n      } else {\n        return(\n        <main className='no-hot-take'>\n          <p className='emblem'>Select a Category!</p>\n        </main>\n      )}\n  }\n\n  return (\n    display()\n  )\n}\n","import './App.css';\nimport React, {useState} from 'react';\nimport Categories from './Categories/Categories';\nimport HotTake from './HotTake/HotTake';\n\nfunction App() {\n  const [hotTake, setHotTake] = useState(null);\n\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const getHotTake = id => {\n    fetch(\"https://yays-or-nays-be.herokuapp.com/graphql\", {\n      method: 'POST',\n      headers: myHeaders,\n      body: JSON.stringify({\n        query: `query{\\n  hotTakeByCategory(tagId: ${id}) {\\n    id\\n    question\\n    yesVote\\n    noVote\\n    picture\\n    tag{\\n      id\\n      category\\n    }\\n  }\\n}\\n\\n`,\n        variables: {}\n      }),\n      redirect: 'follow'\n    })\n      .then(response => response.json())\n      .then(result => setHotTake(result.data.hotTakeByCategory))\n      .catch(error => console.log('error', error));\n  }\n\n  return (\n    <div className=\"App\">\n      <Categories getHotTake={getHotTake} />\n      <HotTake hotTake={hotTake} getHotTake={getHotTake}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}